{
  "version": 4,
  "terraform_version": "1.3.6",
  "serial": 822,
  "lineage": "9ec2d201-8b67-72c7-4be5-b688f4989de5",
  "outputs": {},
  "resources": [
    {
      "module": "module.instances",
      "mode": "data",
      "type": "template_file",
      "name": "hosts",
      "provider": "provider[\"registry.terraform.io/hashicorp/template\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "9007e74c7e9100686e13e0554e093bdcd799e1d3f5c83ec0ac54ece592c77a88",
            "rendered": "[all]\nnode1 ansible_host=10.166.15.222\nnode2 ansible_host=10.166.15.221\nnode3 ansible_host=10.166.15.220\n[kube-master]\nnode1\n[etcd]\nnode1\nnode2\nnode3\n[kube-node]\nnode2\nnode3\n[k8s-cluster:children]\nkube-master\nkube-node",
            "template": "[all]\nnode1 ansible_host=${kubernetes_master1_ip}\nnode2 ansible_host=${kubernetes_slave1_ip}\nnode3 ansible_host=${kubernetes_slave2_ip}\n[kube-master]\nnode1\n[etcd]\nnode1\nnode2\nnode3\n[kube-node]\nnode2\nnode3\n[k8s-cluster:children]\nkube-master\nkube-node",
            "vars": {
              "kubernetes_master1_ip": "10.166.15.222",
              "kubernetes_slave1_ip": "10.166.15.221",
              "kubernetes_slave2_ip": "10.166.15.220"
            }
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.instances",
      "mode": "data",
      "type": "template_file",
      "name": "k8s_nodes",
      "provider": "provider[\"registry.terraform.io/hashicorp/template\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "aa110baa143c27571f5a3d8be2c015b2994b26f27cb574d6240128f75fbdb883",
            "rendered": "---\n# Kubernetes configuration dirs and system namespace.\n# Those are where all the additional config stuff goes\n# the kubernetes normally puts in /srv/kubernetes.\n# This puts them in a sane location and namespace.\n# Editing those values will almost surely break something.\nkube_config_dir: /etc/kubernetes\nkube_script_dir: \"{{ bin_dir }}/kubernetes-scripts\"\nkube_manifest_dir: \"{{ kube_config_dir }}/manifests\"\n\n# This is where all the cert scripts and certs will be located\nkube_cert_dir: \"{{ kube_config_dir }}/ssl\"\n\n# This is where all of the bearer tokens will be stored\nkube_token_dir: \"{{ kube_config_dir }}/tokens\"\n\nkube_api_anonymous_auth: true\n\n## Change this to use another Kubernetes version, e.g. a current beta release\nkube_version: v1.25.4\n\n# Where the binaries will be downloaded.\n# Note: ensure that you've enough disk space (about 1G)\nlocal_release_dir: \"/tmp/releases\"\n# Random shifts for retrying failed ops like pushing/downloading\nretry_stagger: 5\n\n# This is the user that owns tha cluster installation.\nkube_owner: kube\n\n# This is the group that the cert creation scripts chgrp the\n# cert files to. Not really changeable...\nkube_cert_group: kube-cert\n\n# Cluster Loglevel configuration\nkube_log_level: 2\n\n# Directory where credentials will be stored\ncredentials_dir: \"{{ inventory_dir }}/credentials\"\n\n## It is possible to activate / deactivate selected authentication methods (oidc, static token auth)\n# kube_oidc_auth: false\n# kube_token_auth: false\n\n\n## Variables for OpenID Connect Configuration https://kubernetes.io/docs/admin/authentication/\n## To use OpenID you have to deploy additional an OpenID Provider (e.g Dex, Keycloak, ...)\n\n# kube_oidc_url: https:// ...\n# kube_oidc_client_id: kubernetes\n## Optional settings for OIDC\n# kube_oidc_ca_file: \"{{ kube_cert_dir }}/ca.pem\"\n# kube_oidc_username_claim: sub\n# kube_oidc_username_prefix: 'oidc:'\n# kube_oidc_groups_claim: groups\n# kube_oidc_groups_prefix: 'oidc:'\n\n## Variables to control webhook authn/authz\n# kube_webhook_token_auth: false\n# kube_webhook_token_auth_url: https://...\n# kube_webhook_token_auth_url_skip_tls_verify: false\n\n## For webhook authorization, authorization_modes must include Webhook\n# kube_webhook_authorization: false\n# kube_webhook_authorization_url: https://...\n# kube_webhook_authorization_url_skip_tls_verify: false\n\n# Choose network plugin (cilium, calico, kube-ovn, weave or flannel. Use cni for generic cni plugin)\n# Can also be set to 'cloud', which lets the cloud provider setup appropriate routing\nkube_network_plugin: calico\n\n# Setting multi_networking to true will install Multus: https://github.com/intel/multus-cni\nkube_network_plugin_multus: false\n\n# Kubernetes internal network for services, unused block of space.\nkube_service_addresses: 10.233.0.0/18\n\n# internal network. When used, it will assign IP\n# addresses from this range to individual pods.\n# This network must be unused in your network infrastructure!\nkube_pods_subnet: 10.233.64.0/18\n\n# internal network node size allocation (optional). This is the size allocated\n# to each node for pod IP address allocation. Note that the number of pods per node is\n# also limited by the kubelet_max_pods variable which defaults to 110.\n#\n# Example:\n# Up to 64 nodes and up to 254 or kubelet_max_pods (the lowest of the two) pods per node:\n#  - kube_pods_subnet: 10.233.64.0/18\n#  - kube_network_node_prefix: 24\n#  - kubelet_max_pods: 110\n#\n# Example:\n# Up to 128 nodes and up to 126 or kubelet_max_pods (the lowest of the two) pods per node:\n#  - kube_pods_subnet: 10.233.64.0/18\n#  - kube_network_node_prefix: 25\n#  - kubelet_max_pods: 110\nkube_network_node_prefix: 24\n\n# Configure Dual Stack networking (i.e. both IPv4 and IPv6)\nenable_dual_stack_networks: false\n\n# Kubernetes internal network for IPv6 services, unused block of space.\n# This is only used if enable_dual_stack_networks is set to true\n# This provides 4096 IPv6 IPs\nkube_service_addresses_ipv6: fd85:ee78:d8a6:8607::1000/116\n\n# Internal network. When used, it will assign IPv6 addresses from this range to individual pods.\n# This network must not already be in your network infrastructure!\n# This is only used if enable_dual_stack_networks is set to true.\n# This provides room for 256 nodes with 254 pods per node.\nkube_pods_subnet_ipv6: fd85:ee78:d8a6:8607::1:0000/112\n\n# IPv6 subnet size allocated to each for pods.\n# This is only used if enable_dual_stack_networks is set to true\n# This provides room for 254 pods per node.\nkube_network_node_prefix_ipv6: 120\n\n# The port the API Server will be listening on.\nkube_apiserver_ip: \"{{ kube_service_addresses|ipaddr('net')|ipaddr(1)|ipaddr('address') }}\"\nkube_apiserver_port: 6443  # (https)\n\n# Kube-proxy proxyMode configuration.\n# Can be ipvs, iptables\nkube_proxy_mode: ipvs\n\n# configure arp_ignore and arp_announce to avoid answering ARP queries from kube-ipvs0 interface\n# must be set to true for MetalLB, kube-vip(ARP enabled) to work\nkube_proxy_strict_arp: false\n\n# A string slice of values which specify the addresses to use for NodePorts.\n# Values may be valid IP blocks (e.g. 1.2.3.0/24, 1.2.3.4/32).\n# The default empty string slice ([]) means to use all local addresses.\n# kube_proxy_nodeport_addresses_cidr is retained for legacy config\nkube_proxy_nodeport_addresses: \u003e-\n  {%- if kube_proxy_nodeport_addresses_cidr is defined -%}\n  [{{ kube_proxy_nodeport_addresses_cidr }}]\n  {%- else -%}\n  []\n  {%- endif -%}\n\n# If non-empty, will use this string as identification instead of the actual hostname\n# kube_override_hostname: \u003e-\n#   {%- if cloud_provider is defined and cloud_provider in [ 'aws' ] -%}\n#   {%- else -%}\n#   {{ inventory_hostname }}\n#   {%- endif -%}\n\n## Encrypting Secret Data at Rest\nkube_encrypt_secret_data: false\n\n# Graceful Node Shutdown (Kubernetes \u003e= 1.21.0), see https://kubernetes.io/blog/2021/04/21/graceful-node-shutdown-beta/\n# kubelet_shutdown_grace_period had to be greater than kubelet_shutdown_grace_period_critical_pods to allow\n# non-critical podsa to also terminate gracefully\n# kubelet_shutdown_grace_period: 60s\n# kubelet_shutdown_grace_period_critical_pods: 20s\n\n# DNS configuration.\n# Kubernetes cluster name, also will be used as DNS domain\ncluster_name: cluster.local\n# Subdomains of DNS domain to be resolved via /etc/resolv.conf for hostnet pods\nndots: 2\n# dns_timeout: 2\n# dns_attempts: 2\n# Custom search domains to be added in addition to the default cluster search domains\n# searchdomains:\n#   - svc.{{ cluster_name }}\n#   - default.svc.{{ cluster_name  }}\n# Remove default cluster search domains (``default.svc.{{ dns_domain }}, svc.{{ dns_domain }}``).\n# remove_default_searchdomains: false\n# Can be coredns, coredns_dual, manual or none\ndns_mode: coredns\n# Set manual server if using a custom cluster DNS server\n# manual_dns_server: 10.x.x.x\n# Enable nodelocal dns cache\nenable_nodelocaldns: true\nenable_nodelocaldns_secondary: false\nnodelocaldns_ip: 169.254.25.10\nnodelocaldns_health_port: 9254\nnodelocaldns_second_health_port: 9256\nnodelocaldns_bind_metrics_host_ip: false\nnodelocaldns_secondary_skew_seconds: 5\n# nodelocaldns_external_zones:\n# - zones:\n#   - example.com\n#   - example.io:1053\n#   nameservers:\n#   - 1.1.1.1\n#   - 2.2.2.2\n#   cache: 5\n# - zones:\n#   - https://mycompany.local:4453\n#   nameservers:\n#   - 192.168.0.53\n#   cache: 0\n# - zones:\n#   - mydomain.tld\n#   nameservers:\n#   - 10.233.0.3\n#   cache: 5\n#   rewrite:\n#   - name website.tld website.namespace.svc.cluster.local\n# Enable k8s_external plugin for CoreDNS\nenable_coredns_k8s_external: false\ncoredns_k8s_external_zone: k8s_external.local\n# Enable endpoint_pod_names option for kubernetes plugin\nenable_coredns_k8s_endpoint_pod_names: false\n# Set forward options for upstream DNS servers in coredns (and nodelocaldns) config\n# dns_upstream_forward_extra_opts:\n#   policy: sequential\n\n# Can be docker_dns, host_resolvconf or none\nresolvconf_mode: host_resolvconf\n# Deploy netchecker app to verify DNS resolve as an HTTP service\ndeploy_netchecker: false\n# Ip address of the kubernetes skydns service\nskydns_server: \"{{ kube_service_addresses|ipaddr('net')|ipaddr(3)|ipaddr('address') }}\"\nskydns_server_secondary: \"{{ kube_service_addresses|ipaddr('net')|ipaddr(4)|ipaddr('address') }}\"\ndns_domain: \"{{ cluster_name }}\"\n\n## Container runtime\n## docker for docker, crio for cri-o and containerd for containerd.\n## Default: containerd\ncontainer_manager: containerd\n\n# Additional container runtimes\nkata_containers_enabled: false\n\nkubeadm_certificate_key: \"{{ lookup('password', credentials_dir + '/kubeadm_certificate_key.creds length=64 chars=hexdigits') | lower }}\"\n\n# K8s image pull policy (imagePullPolicy)\nk8s_image_pull_policy: IfNotPresent\n\n# audit log for kubernetes\nkubernetes_audit: false\n\n# define kubelet config dir for dynamic kubelet\n# kubelet_config_dir:\ndefault_kubelet_config_dir: \"{{ kube_config_dir }}/dynamic_kubelet_dir\"\n\n# pod security policy (RBAC must be enabled either by having 'RBAC' in authorization_modes or kubeadm enabled)\npodsecuritypolicy_enabled: false\n\n# Custom PodSecurityPolicySpec for restricted policy\n# podsecuritypolicy_restricted_spec: {}\n\n# Custom PodSecurityPolicySpec for privileged policy\n# podsecuritypolicy_privileged_spec: {}\n\n# Make a copy of kubeconfig on the host that runs Ansible in {{ inventory_dir }}/artifacts\n# kubeconfig_localhost: false\n# Use ansible_host as external api ip when copying over kubeconfig.\n# kubeconfig_localhost_ansible_host: false\n# Download kubectl onto the host that runs Ansible in {{ bin_dir }}\n# kubectl_localhost: false\n\n# A comma separated list of levels of node allocatable enforcement to be enforced by kubelet.\n# Acceptable options are 'pods', 'system-reserved', 'kube-reserved' and ''. Default is \"\".\n# kubelet_enforce_node_allocatable: pods\n\n## Optionally reserve resources for OS system daemons.\n# system_reserved: true\n## Uncomment to override default values\n# system_memory_reserved: 512Mi\n# system_cpu_reserved: 500m\n# system_ephemeral_storage_reserved: 2Gi\n## Reservation for master hosts\n# system_master_memory_reserved: 256Mi\n# system_master_cpu_reserved: 250m\n# system_master_ephemeral_storage_reserved: 2Gi\n\n## Eviction Thresholds to avoid system OOMs\n# https://kubernetes.io/docs/tasks/administer-cluster/reserve-compute-resources/#eviction-thresholds\n# eviction_hard: {}\n# eviction_hard_control_plane: {}\n\n# An alternative flexvolume plugin directory\n# kubelet_flexvolumes_plugins_dir: /usr/libexec/kubernetes/kubelet-plugins/volume/exec\n\n## Supplementary addresses that can be added in kubernetes ssl keys.\n## That can be useful for example to setup a keepalived virtual IP\nsupplementary_addresses_in_ssl_keys: [35.228.106.60, 34.88.244.115, 34.88.178.242]\n\n## Running on top of openstack vms with cinder enabled may lead to unschedulable pods due to NoVolumeZoneConflict restriction in kube-scheduler.\n## See https://github.com/kubernetes-sigs/kubespray/issues/2141\n## Set this variable to true to get rid of this issue\nvolume_cross_zone_attachment: false\n## Add Persistent Volumes Storage Class for corresponding cloud provider (supported: in-tree OpenStack, Cinder CSI,\n## AWS EBS CSI, Azure Disk CSI, GCP Persistent Disk CSI)\npersistent_volumes_enabled: false\n\n## Container Engine Acceleration\n## Enable container acceleration feature, for example use gpu acceleration in containers\n# nvidia_accelerator_enabled: true\n## Nvidia GPU driver install. Install will by done by a (init) pod running as a daemonset.\n## Important: if you use Ubuntu then you should set in all.yml 'docker_storage_options: -s overlay2'\n## Array with nvida_gpu_nodes, leave empty or comment if you don't want to install drivers.\n## Labels and taints won't be set to nodes if they are not in the array.\n# nvidia_gpu_nodes:\n#   - kube-gpu-001\n# nvidia_driver_version: \"384.111\"\n## flavor can be tesla or gtx\n# nvidia_gpu_flavor: gtx\n## NVIDIA driver installer images. Change them if you have trouble accessing gcr.io.\n# nvidia_driver_install_centos_container: atzedevries/nvidia-centos-driver-installer:2\n# nvidia_driver_install_ubuntu_container: gcr.io/google-containers/ubuntu-nvidia-driver-installer@sha256:7df76a0f0a17294e86f691c81de6bbb7c04a1b4b3d4ea4e7e2cccdc42e1f6d63\n## NVIDIA GPU device plugin image.\n# nvidia_gpu_device_plugin_container: \"registry.k8s.io/nvidia-gpu-device-plugin@sha256:0842734032018be107fa2490c98156992911e3e1f2a21e059ff0105b07dd8e9e\"\n\n## Support tls min version, Possible values: VersionTLS10, VersionTLS11, VersionTLS12, VersionTLS13.\n# tls_min_version: \"\"\n\n## Support tls cipher suites.\n# tls_cipher_suites: {}\n#   - TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA\n#   - TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256\n#   - TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256\n#   - TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\n#   - TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\n#   - TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305\n#   - TLS_ECDHE_ECDSA_WITH_RC4_128_SHA\n#   - TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA\n#   - TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\n#   - TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\n#   - TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\n#   - TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\n#   - TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\n#   - TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305\n#   - TLS_ECDHE_RSA_WITH_RC4_128_SHA\n#   - TLS_RSA_WITH_3DES_EDE_CBC_SHA\n#   - TLS_RSA_WITH_AES_128_CBC_SHA\n#   - TLS_RSA_WITH_AES_128_CBC_SHA256\n#   - TLS_RSA_WITH_AES_128_GCM_SHA256\n#   - TLS_RSA_WITH_AES_256_CBC_SHA\n#   - TLS_RSA_WITH_AES_256_GCM_SHA384\n#   - TLS_RSA_WITH_RC4_128_SHA\n\n## Amount of time to retain events. (default 1h0m0s)\nevent_ttl_duration: \"1h0m0s\"\n\n## Automatically renew K8S control plane certificates on first Monday of each month\nauto_renew_certificates: false\n# First Monday of each month\n# auto_renew_certificates_systemd_calendar: \"Mon *-*-1,2,3,4,5,6,7 03:{{ groups['kube_control_plane'].index(inventory_hostname) }}0:00\"\n\n# kubeadm patches path\nkubeadm_patches:\n  enabled: false\n  source_dir: \"{{ inventory_dir }}/patches\"\n  dest_dir: \"{{ kube_config_dir }}/patches\"\n",
            "template": "---\n# Kubernetes configuration dirs and system namespace.\n# Those are where all the additional config stuff goes\n# the kubernetes normally puts in /srv/kubernetes.\n# This puts them in a sane location and namespace.\n# Editing those values will almost surely break something.\nkube_config_dir: /etc/kubernetes\nkube_script_dir: \"{{ bin_dir }}/kubernetes-scripts\"\nkube_manifest_dir: \"{{ kube_config_dir }}/manifests\"\n\n# This is where all the cert scripts and certs will be located\nkube_cert_dir: \"{{ kube_config_dir }}/ssl\"\n\n# This is where all of the bearer tokens will be stored\nkube_token_dir: \"{{ kube_config_dir }}/tokens\"\n\nkube_api_anonymous_auth: true\n\n## Change this to use another Kubernetes version, e.g. a current beta release\nkube_version: v1.25.4\n\n# Where the binaries will be downloaded.\n# Note: ensure that you've enough disk space (about 1G)\nlocal_release_dir: \"/tmp/releases\"\n# Random shifts for retrying failed ops like pushing/downloading\nretry_stagger: 5\n\n# This is the user that owns tha cluster installation.\nkube_owner: kube\n\n# This is the group that the cert creation scripts chgrp the\n# cert files to. Not really changeable...\nkube_cert_group: kube-cert\n\n# Cluster Loglevel configuration\nkube_log_level: 2\n\n# Directory where credentials will be stored\ncredentials_dir: \"{{ inventory_dir }}/credentials\"\n\n## It is possible to activate / deactivate selected authentication methods (oidc, static token auth)\n# kube_oidc_auth: false\n# kube_token_auth: false\n\n\n## Variables for OpenID Connect Configuration https://kubernetes.io/docs/admin/authentication/\n## To use OpenID you have to deploy additional an OpenID Provider (e.g Dex, Keycloak, ...)\n\n# kube_oidc_url: https:// ...\n# kube_oidc_client_id: kubernetes\n## Optional settings for OIDC\n# kube_oidc_ca_file: \"{{ kube_cert_dir }}/ca.pem\"\n# kube_oidc_username_claim: sub\n# kube_oidc_username_prefix: 'oidc:'\n# kube_oidc_groups_claim: groups\n# kube_oidc_groups_prefix: 'oidc:'\n\n## Variables to control webhook authn/authz\n# kube_webhook_token_auth: false\n# kube_webhook_token_auth_url: https://...\n# kube_webhook_token_auth_url_skip_tls_verify: false\n\n## For webhook authorization, authorization_modes must include Webhook\n# kube_webhook_authorization: false\n# kube_webhook_authorization_url: https://...\n# kube_webhook_authorization_url_skip_tls_verify: false\n\n# Choose network plugin (cilium, calico, kube-ovn, weave or flannel. Use cni for generic cni plugin)\n# Can also be set to 'cloud', which lets the cloud provider setup appropriate routing\nkube_network_plugin: calico\n\n# Setting multi_networking to true will install Multus: https://github.com/intel/multus-cni\nkube_network_plugin_multus: false\n\n# Kubernetes internal network for services, unused block of space.\nkube_service_addresses: 10.233.0.0/18\n\n# internal network. When used, it will assign IP\n# addresses from this range to individual pods.\n# This network must be unused in your network infrastructure!\nkube_pods_subnet: 10.233.64.0/18\n\n# internal network node size allocation (optional). This is the size allocated\n# to each node for pod IP address allocation. Note that the number of pods per node is\n# also limited by the kubelet_max_pods variable which defaults to 110.\n#\n# Example:\n# Up to 64 nodes and up to 254 or kubelet_max_pods (the lowest of the two) pods per node:\n#  - kube_pods_subnet: 10.233.64.0/18\n#  - kube_network_node_prefix: 24\n#  - kubelet_max_pods: 110\n#\n# Example:\n# Up to 128 nodes and up to 126 or kubelet_max_pods (the lowest of the two) pods per node:\n#  - kube_pods_subnet: 10.233.64.0/18\n#  - kube_network_node_prefix: 25\n#  - kubelet_max_pods: 110\nkube_network_node_prefix: 24\n\n# Configure Dual Stack networking (i.e. both IPv4 and IPv6)\nenable_dual_stack_networks: false\n\n# Kubernetes internal network for IPv6 services, unused block of space.\n# This is only used if enable_dual_stack_networks is set to true\n# This provides 4096 IPv6 IPs\nkube_service_addresses_ipv6: fd85:ee78:d8a6:8607::1000/116\n\n# Internal network. When used, it will assign IPv6 addresses from this range to individual pods.\n# This network must not already be in your network infrastructure!\n# This is only used if enable_dual_stack_networks is set to true.\n# This provides room for 256 nodes with 254 pods per node.\nkube_pods_subnet_ipv6: fd85:ee78:d8a6:8607::1:0000/112\n\n# IPv6 subnet size allocated to each for pods.\n# This is only used if enable_dual_stack_networks is set to true\n# This provides room for 254 pods per node.\nkube_network_node_prefix_ipv6: 120\n\n# The port the API Server will be listening on.\nkube_apiserver_ip: \"{{ kube_service_addresses|ipaddr('net')|ipaddr(1)|ipaddr('address') }}\"\nkube_apiserver_port: 6443  # (https)\n\n# Kube-proxy proxyMode configuration.\n# Can be ipvs, iptables\nkube_proxy_mode: ipvs\n\n# configure arp_ignore and arp_announce to avoid answering ARP queries from kube-ipvs0 interface\n# must be set to true for MetalLB, kube-vip(ARP enabled) to work\nkube_proxy_strict_arp: false\n\n# A string slice of values which specify the addresses to use for NodePorts.\n# Values may be valid IP blocks (e.g. 1.2.3.0/24, 1.2.3.4/32).\n# The default empty string slice ([]) means to use all local addresses.\n# kube_proxy_nodeport_addresses_cidr is retained for legacy config\nkube_proxy_nodeport_addresses: \u003e-\n  {%- if kube_proxy_nodeport_addresses_cidr is defined -%}\n  [{{ kube_proxy_nodeport_addresses_cidr }}]\n  {%- else -%}\n  []\n  {%- endif -%}\n\n# If non-empty, will use this string as identification instead of the actual hostname\n# kube_override_hostname: \u003e-\n#   {%- if cloud_provider is defined and cloud_provider in [ 'aws' ] -%}\n#   {%- else -%}\n#   {{ inventory_hostname }}\n#   {%- endif -%}\n\n## Encrypting Secret Data at Rest\nkube_encrypt_secret_data: false\n\n# Graceful Node Shutdown (Kubernetes \u003e= 1.21.0), see https://kubernetes.io/blog/2021/04/21/graceful-node-shutdown-beta/\n# kubelet_shutdown_grace_period had to be greater than kubelet_shutdown_grace_period_critical_pods to allow\n# non-critical podsa to also terminate gracefully\n# kubelet_shutdown_grace_period: 60s\n# kubelet_shutdown_grace_period_critical_pods: 20s\n\n# DNS configuration.\n# Kubernetes cluster name, also will be used as DNS domain\ncluster_name: cluster.local\n# Subdomains of DNS domain to be resolved via /etc/resolv.conf for hostnet pods\nndots: 2\n# dns_timeout: 2\n# dns_attempts: 2\n# Custom search domains to be added in addition to the default cluster search domains\n# searchdomains:\n#   - svc.{{ cluster_name }}\n#   - default.svc.{{ cluster_name  }}\n# Remove default cluster search domains (``default.svc.{{ dns_domain }}, svc.{{ dns_domain }}``).\n# remove_default_searchdomains: false\n# Can be coredns, coredns_dual, manual or none\ndns_mode: coredns\n# Set manual server if using a custom cluster DNS server\n# manual_dns_server: 10.x.x.x\n# Enable nodelocal dns cache\nenable_nodelocaldns: true\nenable_nodelocaldns_secondary: false\nnodelocaldns_ip: 169.254.25.10\nnodelocaldns_health_port: 9254\nnodelocaldns_second_health_port: 9256\nnodelocaldns_bind_metrics_host_ip: false\nnodelocaldns_secondary_skew_seconds: 5\n# nodelocaldns_external_zones:\n# - zones:\n#   - example.com\n#   - example.io:1053\n#   nameservers:\n#   - 1.1.1.1\n#   - 2.2.2.2\n#   cache: 5\n# - zones:\n#   - https://mycompany.local:4453\n#   nameservers:\n#   - 192.168.0.53\n#   cache: 0\n# - zones:\n#   - mydomain.tld\n#   nameservers:\n#   - 10.233.0.3\n#   cache: 5\n#   rewrite:\n#   - name website.tld website.namespace.svc.cluster.local\n# Enable k8s_external plugin for CoreDNS\nenable_coredns_k8s_external: false\ncoredns_k8s_external_zone: k8s_external.local\n# Enable endpoint_pod_names option for kubernetes plugin\nenable_coredns_k8s_endpoint_pod_names: false\n# Set forward options for upstream DNS servers in coredns (and nodelocaldns) config\n# dns_upstream_forward_extra_opts:\n#   policy: sequential\n\n# Can be docker_dns, host_resolvconf or none\nresolvconf_mode: host_resolvconf\n# Deploy netchecker app to verify DNS resolve as an HTTP service\ndeploy_netchecker: false\n# Ip address of the kubernetes skydns service\nskydns_server: \"{{ kube_service_addresses|ipaddr('net')|ipaddr(3)|ipaddr('address') }}\"\nskydns_server_secondary: \"{{ kube_service_addresses|ipaddr('net')|ipaddr(4)|ipaddr('address') }}\"\ndns_domain: \"{{ cluster_name }}\"\n\n## Container runtime\n## docker for docker, crio for cri-o and containerd for containerd.\n## Default: containerd\ncontainer_manager: containerd\n\n# Additional container runtimes\nkata_containers_enabled: false\n\nkubeadm_certificate_key: \"{{ lookup('password', credentials_dir + '/kubeadm_certificate_key.creds length=64 chars=hexdigits') | lower }}\"\n\n# K8s image pull policy (imagePullPolicy)\nk8s_image_pull_policy: IfNotPresent\n\n# audit log for kubernetes\nkubernetes_audit: false\n\n# define kubelet config dir for dynamic kubelet\n# kubelet_config_dir:\ndefault_kubelet_config_dir: \"{{ kube_config_dir }}/dynamic_kubelet_dir\"\n\n# pod security policy (RBAC must be enabled either by having 'RBAC' in authorization_modes or kubeadm enabled)\npodsecuritypolicy_enabled: false\n\n# Custom PodSecurityPolicySpec for restricted policy\n# podsecuritypolicy_restricted_spec: {}\n\n# Custom PodSecurityPolicySpec for privileged policy\n# podsecuritypolicy_privileged_spec: {}\n\n# Make a copy of kubeconfig on the host that runs Ansible in {{ inventory_dir }}/artifacts\n# kubeconfig_localhost: false\n# Use ansible_host as external api ip when copying over kubeconfig.\n# kubeconfig_localhost_ansible_host: false\n# Download kubectl onto the host that runs Ansible in {{ bin_dir }}\n# kubectl_localhost: false\n\n# A comma separated list of levels of node allocatable enforcement to be enforced by kubelet.\n# Acceptable options are 'pods', 'system-reserved', 'kube-reserved' and ''. Default is \"\".\n# kubelet_enforce_node_allocatable: pods\n\n## Optionally reserve resources for OS system daemons.\n# system_reserved: true\n## Uncomment to override default values\n# system_memory_reserved: 512Mi\n# system_cpu_reserved: 500m\n# system_ephemeral_storage_reserved: 2Gi\n## Reservation for master hosts\n# system_master_memory_reserved: 256Mi\n# system_master_cpu_reserved: 250m\n# system_master_ephemeral_storage_reserved: 2Gi\n\n## Eviction Thresholds to avoid system OOMs\n# https://kubernetes.io/docs/tasks/administer-cluster/reserve-compute-resources/#eviction-thresholds\n# eviction_hard: {}\n# eviction_hard_control_plane: {}\n\n# An alternative flexvolume plugin directory\n# kubelet_flexvolumes_plugins_dir: /usr/libexec/kubernetes/kubelet-plugins/volume/exec\n\n## Supplementary addresses that can be added in kubernetes ssl keys.\n## That can be useful for example to setup a keepalived virtual IP\nsupplementary_addresses_in_ssl_keys: [${kubernetes_master1_ext_ip}, ${kubernetes_slave1_ext_ip}, ${kubernetes_slave2_ext_ip}]\n\n## Running on top of openstack vms with cinder enabled may lead to unschedulable pods due to NoVolumeZoneConflict restriction in kube-scheduler.\n## See https://github.com/kubernetes-sigs/kubespray/issues/2141\n## Set this variable to true to get rid of this issue\nvolume_cross_zone_attachment: false\n## Add Persistent Volumes Storage Class for corresponding cloud provider (supported: in-tree OpenStack, Cinder CSI,\n## AWS EBS CSI, Azure Disk CSI, GCP Persistent Disk CSI)\npersistent_volumes_enabled: false\n\n## Container Engine Acceleration\n## Enable container acceleration feature, for example use gpu acceleration in containers\n# nvidia_accelerator_enabled: true\n## Nvidia GPU driver install. Install will by done by a (init) pod running as a daemonset.\n## Important: if you use Ubuntu then you should set in all.yml 'docker_storage_options: -s overlay2'\n## Array with nvida_gpu_nodes, leave empty or comment if you don't want to install drivers.\n## Labels and taints won't be set to nodes if they are not in the array.\n# nvidia_gpu_nodes:\n#   - kube-gpu-001\n# nvidia_driver_version: \"384.111\"\n## flavor can be tesla or gtx\n# nvidia_gpu_flavor: gtx\n## NVIDIA driver installer images. Change them if you have trouble accessing gcr.io.\n# nvidia_driver_install_centos_container: atzedevries/nvidia-centos-driver-installer:2\n# nvidia_driver_install_ubuntu_container: gcr.io/google-containers/ubuntu-nvidia-driver-installer@sha256:7df76a0f0a17294e86f691c81de6bbb7c04a1b4b3d4ea4e7e2cccdc42e1f6d63\n## NVIDIA GPU device plugin image.\n# nvidia_gpu_device_plugin_container: \"registry.k8s.io/nvidia-gpu-device-plugin@sha256:0842734032018be107fa2490c98156992911e3e1f2a21e059ff0105b07dd8e9e\"\n\n## Support tls min version, Possible values: VersionTLS10, VersionTLS11, VersionTLS12, VersionTLS13.\n# tls_min_version: \"\"\n\n## Support tls cipher suites.\n# tls_cipher_suites: {}\n#   - TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA\n#   - TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256\n#   - TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256\n#   - TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\n#   - TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\n#   - TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305\n#   - TLS_ECDHE_ECDSA_WITH_RC4_128_SHA\n#   - TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA\n#   - TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\n#   - TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\n#   - TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\n#   - TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\n#   - TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\n#   - TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305\n#   - TLS_ECDHE_RSA_WITH_RC4_128_SHA\n#   - TLS_RSA_WITH_3DES_EDE_CBC_SHA\n#   - TLS_RSA_WITH_AES_128_CBC_SHA\n#   - TLS_RSA_WITH_AES_128_CBC_SHA256\n#   - TLS_RSA_WITH_AES_128_GCM_SHA256\n#   - TLS_RSA_WITH_AES_256_CBC_SHA\n#   - TLS_RSA_WITH_AES_256_GCM_SHA384\n#   - TLS_RSA_WITH_RC4_128_SHA\n\n## Amount of time to retain events. (default 1h0m0s)\nevent_ttl_duration: \"1h0m0s\"\n\n## Automatically renew K8S control plane certificates on first Monday of each month\nauto_renew_certificates: false\n# First Monday of each month\n# auto_renew_certificates_systemd_calendar: \"Mon *-*-1,2,3,4,5,6,7 03:{{ groups['kube_control_plane'].index(inventory_hostname) }}0:00\"\n\n# kubeadm patches path\nkubeadm_patches:\n  enabled: false\n  source_dir: \"{{ inventory_dir }}/patches\"\n  dest_dir: \"{{ kube_config_dir }}/patches\"\n",
            "vars": {
              "kubernetes_master1_ext_ip": "35.228.106.60",
              "kubernetes_slave1_ext_ip": "34.88.244.115",
              "kubernetes_slave2_ext_ip": "34.88.178.242"
            }
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.instances",
      "mode": "data",
      "type": "template_file",
      "name": "private_key",
      "provider": "provider[\"registry.terraform.io/hashicorp/template\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "1f3bcc2d7ff21b527a198141f12d6e5fdc405fbe23aa88d36bb1046507e23ed4",
            "rendered": "export KEY=\"-----BEGIN RSA PRIVATE KEY-----\n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\n-----END RSA PRIVATE KEY-----\n\"\necho -e \"$KEY\" \u003e /root/.ssh/id_rsa\nchmod 600 /root/.ssh/id_rsa\napt-get -y update\napt-get -y install python3-pip\ncd /root\ngit clone https://github.com/veremchukvv/k8s-home-demo.git\ncd k8s-home-demo/kubespray\nsudo pip install -r requirements.txt",
            "template": "export KEY=\"${tls_private_key}\"\necho -e \"$KEY\" \u003e /root/.ssh/id_rsa\nchmod 600 /root/.ssh/id_rsa\napt-get -y update\napt-get -y install python3-pip\ncd /root\ngit clone https://github.com/veremchukvv/k8s-home-demo.git\ncd k8s-home-demo/kubespray\nsudo pip install -r requirements.txt",
            "vars": {
              "tls_private_key": "-----BEGIN RSA PRIVATE KEY-----\n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\n-----END RSA PRIVATE KEY-----\n"
            }
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "vars"
              },
              {
                "type": "index",
                "value": {
                  "value": "tls_private_key",
                  "type": "string"
                }
              }
            ]
          ]
        }
      ]
    },
    {
      "module": "module.instances",
      "mode": "managed",
      "type": "google_compute_instance",
      "name": "master1",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 6,
          "attributes": {
            "advanced_machine_features": [],
            "allow_stopping_for_update": null,
            "attached_disk": [],
            "boot_disk": [
              {
                "auto_delete": true,
                "device_name": "persistent-disk-0",
                "disk_encryption_key_raw": "",
                "disk_encryption_key_sha256": "",
                "initialize_params": [
                  {
                    "image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-2210-kinetic-amd64-v20221206",
                    "labels": {},
                    "size": 20,
                    "type": "pd-standard"
                  }
                ],
                "kms_key_self_link": "",
                "mode": "READ_WRITE",
                "source": "https://www.googleapis.com/compute/v1/projects/terraform-kubespray-demo/zones/europe-north1-a/disks/kubernetes-master1"
              }
            ],
            "can_ip_forward": false,
            "confidential_instance_config": [],
            "cpu_platform": "Intel Cascade Lake",
            "current_status": "RUNNING",
            "deletion_protection": false,
            "description": "",
            "desired_status": null,
            "enable_display": false,
            "guest_accelerator": [],
            "hostname": "",
            "id": "projects/terraform-kubespray-demo/zones/europe-north1-a/instances/kubernetes-master1",
            "instance_id": "8470281492114231975",
            "label_fingerprint": "42WmSpB8rSM=",
            "labels": null,
            "machine_type": "n2-standard-2",
            "metadata": {
              "ssh-keys": "root:ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC2yQQOLUedmMI5EmyCX5+q9Mt3oZpeUQEhdIi9FrclBGVOpl79XSWcDCZ4urwJB6e53DkPxf2QUABtXqdqLuBhVYxBFaZf2CiA/GFONcAcrLGM09oZ0nV545iwlcFxkvF2D7uzHiKBNpunjQoQgQwcXSVcWh4VT2t02U0PekpQ8gB27huAuZsKDygcJxSS2CyrA1GVDY366wxQPeLgra6ALOvSlAk7LHVrWRCRGyhLCobFmaA0f6yeV9KhjyIDd32bu7K2sdJ2Ci8PCgc5HdnMd17WmjmWyKpTn7+LJqnmY4u7yS3NRKUAM5yZ2Q8Nag2ThUBwzK7GuzdpYAEqJqnlKF/e3d0CPcxM3EZznUc/hI4DDkbdzfKF/t8TGzPLLAFTnnFrFZh+RfX0a5vKQCa6bpyNTXol4E0QtsirKa9nImxhjPKTDZzze7HTvvUO/U4nmyZiQAWSTMh+sz1YvaShfAydEQtjJurvFk18dUO6YABHDzse9Hw5zALAXuOYT4pXvXNoHWgABlmbTOyKyig3G/FmK46tbtyhnrdl1Lt8GiilbbWNawQ9mKdGEJ1LQxUdQ6I1spxIE+zPVWZMUbqgrJdPswU2+dlDcZxK3LyY/EjZuXt5yPWre7Huvt2uYX7vW9n7CGY/h5hErxTrfYTPc8vg77MHVTbkUZVde0GyFw==\n",
              "startup-script": "export KEY=\"-----BEGIN RSA PRIVATE KEY-----\n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\n-----END RSA PRIVATE KEY-----\n\"\necho -e \"$KEY\" \u003e /root/.ssh/id_rsa\nchmod 600 /root/.ssh/id_rsa\napt-get -y update\napt-get -y install python3-pip\ncd /root\ngit clone https://github.com/veremchukvv/k8s-home-demo.git\ncd k8s-home-demo/kubespray\nsudo pip install -r requirements.txt"
            },
            "metadata_fingerprint": "pJOw9Ivxz7w=",
            "metadata_startup_script": null,
            "min_cpu_platform": "",
            "name": "kubernetes-master1",
            "network_interface": [
              {
                "access_config": [
                  {
                    "nat_ip": "35.228.106.60",
                    "network_tier": "PREMIUM",
                    "public_ptr_domain_name": ""
                  }
                ],
                "alias_ip_range": [],
                "ipv6_access_config": [],
                "ipv6_access_type": "",
                "name": "nic0",
                "network": "https://www.googleapis.com/compute/v1/projects/terraform-kubespray-demo/global/networks/default",
                "network_ip": "10.166.15.222",
                "nic_type": "",
                "queue_count": 0,
                "stack_type": "IPV4_ONLY",
                "subnetwork": "https://www.googleapis.com/compute/v1/projects/terraform-kubespray-demo/regions/europe-north1/subnetworks/default",
                "subnetwork_project": "terraform-kubespray-demo"
              }
            ],
            "project": "terraform-kubespray-demo",
            "reservation_affinity": [],
            "resource_policies": null,
            "scheduling": [
              {
                "automatic_restart": false,
                "instance_termination_action": "STOP",
                "min_node_cpus": 0,
                "node_affinities": [],
                "on_host_maintenance": "TERMINATE",
                "preemptible": true,
                "provisioning_model": "SPOT"
              }
            ],
            "scratch_disk": [],
            "self_link": "https://www.googleapis.com/compute/v1/projects/terraform-kubespray-demo/zones/europe-north1-a/instances/kubernetes-master1",
            "service_account": [],
            "shielded_instance_config": [
              {
                "enable_integrity_monitoring": true,
                "enable_secure_boot": false,
                "enable_vtpm": true
              }
            ],
            "tags": null,
            "tags_fingerprint": "42WmSpB8rSM=",
            "timeouts": null,
            "zone": "europe-north1-a"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiNiJ9",
          "dependencies": [
            "module.instances.data.template_file.private_key",
            "module.instances.tls_private_key.ssh"
          ]
        }
      ]
    },
    {
      "module": "module.instances",
      "mode": "managed",
      "type": "google_compute_instance",
      "name": "slave1",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 6,
          "attributes": {
            "advanced_machine_features": [],
            "allow_stopping_for_update": null,
            "attached_disk": [],
            "boot_disk": [
              {
                "auto_delete": true,
                "device_name": "persistent-disk-0",
                "disk_encryption_key_raw": "",
                "disk_encryption_key_sha256": "",
                "initialize_params": [
                  {
                    "image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-2210-kinetic-amd64-v20221206",
                    "labels": {},
                    "size": 20,
                    "type": "pd-standard"
                  }
                ],
                "kms_key_self_link": "",
                "mode": "READ_WRITE",
                "source": "https://www.googleapis.com/compute/v1/projects/terraform-kubespray-demo/zones/europe-north1-a/disks/kubernetes-slave1"
              }
            ],
            "can_ip_forward": false,
            "confidential_instance_config": [],
            "cpu_platform": "Intel Cascade Lake",
            "current_status": "RUNNING",
            "deletion_protection": false,
            "description": "",
            "desired_status": null,
            "enable_display": false,
            "guest_accelerator": [],
            "hostname": "",
            "id": "projects/terraform-kubespray-demo/zones/europe-north1-a/instances/kubernetes-slave1",
            "instance_id": "3854133320493879976",
            "label_fingerprint": "42WmSpB8rSM=",
            "labels": null,
            "machine_type": "n2-standard-2",
            "metadata": {
              "ssh-keys": "root:ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC2yQQOLUedmMI5EmyCX5+q9Mt3oZpeUQEhdIi9FrclBGVOpl79XSWcDCZ4urwJB6e53DkPxf2QUABtXqdqLuBhVYxBFaZf2CiA/GFONcAcrLGM09oZ0nV545iwlcFxkvF2D7uzHiKBNpunjQoQgQwcXSVcWh4VT2t02U0PekpQ8gB27huAuZsKDygcJxSS2CyrA1GVDY366wxQPeLgra6ALOvSlAk7LHVrWRCRGyhLCobFmaA0f6yeV9KhjyIDd32bu7K2sdJ2Ci8PCgc5HdnMd17WmjmWyKpTn7+LJqnmY4u7yS3NRKUAM5yZ2Q8Nag2ThUBwzK7GuzdpYAEqJqnlKF/e3d0CPcxM3EZznUc/hI4DDkbdzfKF/t8TGzPLLAFTnnFrFZh+RfX0a5vKQCa6bpyNTXol4E0QtsirKa9nImxhjPKTDZzze7HTvvUO/U4nmyZiQAWSTMh+sz1YvaShfAydEQtjJurvFk18dUO6YABHDzse9Hw5zALAXuOYT4pXvXNoHWgABlmbTOyKyig3G/FmK46tbtyhnrdl1Lt8GiilbbWNawQ9mKdGEJ1LQxUdQ6I1spxIE+zPVWZMUbqgrJdPswU2+dlDcZxK3LyY/EjZuXt5yPWre7Huvt2uYX7vW9n7CGY/h5hErxTrfYTPc8vg77MHVTbkUZVde0GyFw==\n"
            },
            "metadata_fingerprint": "4PWtvKaCkVA=",
            "metadata_startup_script": null,
            "min_cpu_platform": "",
            "name": "kubernetes-slave1",
            "network_interface": [
              {
                "access_config": [
                  {
                    "nat_ip": "34.88.244.115",
                    "network_tier": "PREMIUM",
                    "public_ptr_domain_name": ""
                  }
                ],
                "alias_ip_range": [],
                "ipv6_access_config": [],
                "ipv6_access_type": "",
                "name": "nic0",
                "network": "https://www.googleapis.com/compute/v1/projects/terraform-kubespray-demo/global/networks/default",
                "network_ip": "10.166.15.221",
                "nic_type": "",
                "queue_count": 0,
                "stack_type": "IPV4_ONLY",
                "subnetwork": "https://www.googleapis.com/compute/v1/projects/terraform-kubespray-demo/regions/europe-north1/subnetworks/default",
                "subnetwork_project": "terraform-kubespray-demo"
              }
            ],
            "project": "terraform-kubespray-demo",
            "reservation_affinity": [],
            "resource_policies": null,
            "scheduling": [
              {
                "automatic_restart": false,
                "instance_termination_action": "STOP",
                "min_node_cpus": 0,
                "node_affinities": [],
                "on_host_maintenance": "TERMINATE",
                "preemptible": true,
                "provisioning_model": "SPOT"
              }
            ],
            "scratch_disk": [],
            "self_link": "https://www.googleapis.com/compute/v1/projects/terraform-kubespray-demo/zones/europe-north1-a/instances/kubernetes-slave1",
            "service_account": [],
            "shielded_instance_config": [
              {
                "enable_integrity_monitoring": true,
                "enable_secure_boot": false,
                "enable_vtpm": true
              }
            ],
            "tags": null,
            "tags_fingerprint": "42WmSpB8rSM=",
            "timeouts": null,
            "zone": "europe-north1-a"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiNiJ9",
          "dependencies": [
            "module.instances.tls_private_key.ssh"
          ]
        }
      ]
    },
    {
      "module": "module.instances",
      "mode": "managed",
      "type": "google_compute_instance",
      "name": "slave2",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 6,
          "attributes": {
            "advanced_machine_features": [],
            "allow_stopping_for_update": null,
            "attached_disk": [],
            "boot_disk": [
              {
                "auto_delete": true,
                "device_name": "persistent-disk-0",
                "disk_encryption_key_raw": "",
                "disk_encryption_key_sha256": "",
                "initialize_params": [
                  {
                    "image": "https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-2210-kinetic-amd64-v20221206",
                    "labels": {},
                    "size": 20,
                    "type": "pd-standard"
                  }
                ],
                "kms_key_self_link": "",
                "mode": "READ_WRITE",
                "source": "https://www.googleapis.com/compute/v1/projects/terraform-kubespray-demo/zones/europe-north1-a/disks/kubernetes-slave2"
              }
            ],
            "can_ip_forward": false,
            "confidential_instance_config": [],
            "cpu_platform": "Intel Cascade Lake",
            "current_status": "RUNNING",
            "deletion_protection": false,
            "description": "",
            "desired_status": null,
            "enable_display": false,
            "guest_accelerator": [],
            "hostname": "",
            "id": "projects/terraform-kubespray-demo/zones/europe-north1-a/instances/kubernetes-slave2",
            "instance_id": "3517476823007548072",
            "label_fingerprint": "42WmSpB8rSM=",
            "labels": null,
            "machine_type": "n2-standard-2",
            "metadata": {
              "ssh-keys": "root:ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC2yQQOLUedmMI5EmyCX5+q9Mt3oZpeUQEhdIi9FrclBGVOpl79XSWcDCZ4urwJB6e53DkPxf2QUABtXqdqLuBhVYxBFaZf2CiA/GFONcAcrLGM09oZ0nV545iwlcFxkvF2D7uzHiKBNpunjQoQgQwcXSVcWh4VT2t02U0PekpQ8gB27huAuZsKDygcJxSS2CyrA1GVDY366wxQPeLgra6ALOvSlAk7LHVrWRCRGyhLCobFmaA0f6yeV9KhjyIDd32bu7K2sdJ2Ci8PCgc5HdnMd17WmjmWyKpTn7+LJqnmY4u7yS3NRKUAM5yZ2Q8Nag2ThUBwzK7GuzdpYAEqJqnlKF/e3d0CPcxM3EZznUc/hI4DDkbdzfKF/t8TGzPLLAFTnnFrFZh+RfX0a5vKQCa6bpyNTXol4E0QtsirKa9nImxhjPKTDZzze7HTvvUO/U4nmyZiQAWSTMh+sz1YvaShfAydEQtjJurvFk18dUO6YABHDzse9Hw5zALAXuOYT4pXvXNoHWgABlmbTOyKyig3G/FmK46tbtyhnrdl1Lt8GiilbbWNawQ9mKdGEJ1LQxUdQ6I1spxIE+zPVWZMUbqgrJdPswU2+dlDcZxK3LyY/EjZuXt5yPWre7Huvt2uYX7vW9n7CGY/h5hErxTrfYTPc8vg77MHVTbkUZVde0GyFw==\n"
            },
            "metadata_fingerprint": "4PWtvKaCkVA=",
            "metadata_startup_script": null,
            "min_cpu_platform": "",
            "name": "kubernetes-slave2",
            "network_interface": [
              {
                "access_config": [
                  {
                    "nat_ip": "34.88.178.242",
                    "network_tier": "PREMIUM",
                    "public_ptr_domain_name": ""
                  }
                ],
                "alias_ip_range": [],
                "ipv6_access_config": [],
                "ipv6_access_type": "",
                "name": "nic0",
                "network": "https://www.googleapis.com/compute/v1/projects/terraform-kubespray-demo/global/networks/default",
                "network_ip": "10.166.15.220",
                "nic_type": "",
                "queue_count": 0,
                "stack_type": "IPV4_ONLY",
                "subnetwork": "https://www.googleapis.com/compute/v1/projects/terraform-kubespray-demo/regions/europe-north1/subnetworks/default",
                "subnetwork_project": "terraform-kubespray-demo"
              }
            ],
            "project": "terraform-kubespray-demo",
            "reservation_affinity": [],
            "resource_policies": null,
            "scheduling": [
              {
                "automatic_restart": false,
                "instance_termination_action": "STOP",
                "min_node_cpus": 0,
                "node_affinities": [],
                "on_host_maintenance": "TERMINATE",
                "preemptible": true,
                "provisioning_model": "SPOT"
              }
            ],
            "scratch_disk": [],
            "self_link": "https://www.googleapis.com/compute/v1/projects/terraform-kubespray-demo/zones/europe-north1-a/instances/kubernetes-slave2",
            "service_account": [],
            "shielded_instance_config": [
              {
                "enable_integrity_monitoring": true,
                "enable_secure_boot": false,
                "enable_vtpm": true
              }
            ],
            "tags": null,
            "tags_fingerprint": "42WmSpB8rSM=",
            "timeouts": null,
            "zone": "europe-north1-a"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiNiJ9",
          "dependencies": [
            "module.instances.tls_private_key.ssh"
          ]
        }
      ]
    },
    {
      "module": "module.instances",
      "mode": "managed",
      "type": "local_file",
      "name": "private_key_pem",
      "provider": "provider[\"registry.terraform.io/hashicorp/local\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "-----BEGIN RSA PRIVATE KEY-----\n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\n-----END RSA PRIVATE KEY-----\n",
            "content_base64": null,
            "directory_permission": "0777",
            "file_permission": "0777",
            "filename": "private_ssh",
            "id": "220bbcceed4299a383743099f0d293a038313482",
            "sensitive_content": null,
            "source": null
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "content"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "module.instances.tls_private_key.ssh"
          ]
        }
      ]
    },
    {
      "module": "module.instances",
      "mode": "managed",
      "type": "local_file",
      "name": "public_key_openssh",
      "provider": "provider[\"registry.terraform.io/hashicorp/local\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC2yQQOLUedmMI5EmyCX5+q9Mt3oZpeUQEhdIi9FrclBGVOpl79XSWcDCZ4urwJB6e53DkPxf2QUABtXqdqLuBhVYxBFaZf2CiA/GFONcAcrLGM09oZ0nV545iwlcFxkvF2D7uzHiKBNpunjQoQgQwcXSVcWh4VT2t02U0PekpQ8gB27huAuZsKDygcJxSS2CyrA1GVDY366wxQPeLgra6ALOvSlAk7LHVrWRCRGyhLCobFmaA0f6yeV9KhjyIDd32bu7K2sdJ2Ci8PCgc5HdnMd17WmjmWyKpTn7+LJqnmY4u7yS3NRKUAM5yZ2Q8Nag2ThUBwzK7GuzdpYAEqJqnlKF/e3d0CPcxM3EZznUc/hI4DDkbdzfKF/t8TGzPLLAFTnnFrFZh+RfX0a5vKQCa6bpyNTXol4E0QtsirKa9nImxhjPKTDZzze7HTvvUO/U4nmyZiQAWSTMh+sz1YvaShfAydEQtjJurvFk18dUO6YABHDzse9Hw5zALAXuOYT4pXvXNoHWgABlmbTOyKyig3G/FmK46tbtyhnrdl1Lt8GiilbbWNawQ9mKdGEJ1LQxUdQ6I1spxIE+zPVWZMUbqgrJdPswU2+dlDcZxK3LyY/EjZuXt5yPWre7Huvt2uYX7vW9n7CGY/h5hErxTrfYTPc8vg77MHVTbkUZVde0GyFw==\n",
            "content_base64": null,
            "directory_permission": "0777",
            "file_permission": "0777",
            "filename": "pub_ssh",
            "id": "213c01a89fc78ae7653c8108fae6c7e879d5ea8e",
            "sensitive_content": null,
            "source": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.instances.tls_private_key.ssh"
          ]
        }
      ]
    },
    {
      "module": "module.instances",
      "mode": "managed",
      "type": "null_resource",
      "name": "export_rendered_host_template",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "5410922017883194966",
            "triggers": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "module.instances.data.template_file.hosts",
            "module.instances.data.template_file.private_key",
            "module.instances.google_compute_instance.master1",
            "module.instances.google_compute_instance.slave1",
            "module.instances.google_compute_instance.slave2",
            "module.instances.tls_private_key.ssh"
          ]
        }
      ]
    },
    {
      "module": "module.instances",
      "mode": "managed",
      "type": "null_resource",
      "name": "export_rendered_k8s_template",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "7807684525094162516",
            "triggers": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "module.instances.data.template_file.k8s_nodes",
            "module.instances.data.template_file.private_key",
            "module.instances.google_compute_instance.master1",
            "module.instances.google_compute_instance.slave1",
            "module.instances.google_compute_instance.slave2",
            "module.instances.tls_private_key.ssh"
          ]
        }
      ]
    },
    {
      "module": "module.instances",
      "mode": "managed",
      "type": "null_resource",
      "name": "file_upload",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "2020491675345039333",
            "triggers": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "module.instances.data.template_file.hosts",
            "module.instances.data.template_file.k8s_nodes",
            "module.instances.data.template_file.private_key",
            "module.instances.google_compute_instance.master1",
            "module.instances.google_compute_instance.slave1",
            "module.instances.google_compute_instance.slave2",
            "module.instances.time_sleep.wait_for_master_creation",
            "module.instances.tls_private_key.ssh"
          ]
        }
      ]
    },
    {
      "module": "module.instances",
      "mode": "managed",
      "type": "time_sleep",
      "name": "wait_for_master_creation",
      "provider": "provider[\"registry.terraform.io/hashicorp/time\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "create_duration": "1m",
            "destroy_duration": null,
            "id": "2022-12-23T08:53:37Z",
            "triggers": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "module.instances.data.template_file.private_key",
            "module.instances.google_compute_instance.master1",
            "module.instances.tls_private_key.ssh"
          ]
        }
      ]
    },
    {
      "module": "module.instances",
      "mode": "managed",
      "type": "tls_private_key",
      "name": "ssh",
      "provider": "provider[\"registry.terraform.io/hashicorp/tls\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "algorithm": "RSA",
            "ecdsa_curve": "P224",
            "id": "286456ed4eef20a1f78fb48b3858a507726b6778",
            "private_key_openssh": "-----BEGIN OPENSSH PRIVATE KEY-----\n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\n-----END OPENSSH PRIVATE KEY-----\n",
            "private_key_pem": "-----BEGIN RSA PRIVATE KEY-----\n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\n-----END RSA PRIVATE KEY-----\n",
            "private_key_pem_pkcs8": "-----BEGIN PRIVATE KEY-----\n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\nIhqRWABAwifRAAJxq4X1TTZGPOOw\n-----END PRIVATE KEY-----\n",
            "public_key_fingerprint_md5": "a2:07:83:41:e7:58:63:c9:f4:4e:17:cc:59:20:b7:30",
            "public_key_fingerprint_sha256": "SHA256:Jj7AMK3pCy2rIN6XbMgH9j01QsMa+bYXq+HcHB7s5lA",
            "public_key_openssh": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC2yQQOLUedmMI5EmyCX5+q9Mt3oZpeUQEhdIi9FrclBGVOpl79XSWcDCZ4urwJB6e53DkPxf2QUABtXqdqLuBhVYxBFaZf2CiA/GFONcAcrLGM09oZ0nV545iwlcFxkvF2D7uzHiKBNpunjQoQgQwcXSVcWh4VT2t02U0PekpQ8gB27huAuZsKDygcJxSS2CyrA1GVDY366wxQPeLgra6ALOvSlAk7LHVrWRCRGyhLCobFmaA0f6yeV9KhjyIDd32bu7K2sdJ2Ci8PCgc5HdnMd17WmjmWyKpTn7+LJqnmY4u7yS3NRKUAM5yZ2Q8Nag2ThUBwzK7GuzdpYAEqJqnlKF/e3d0CPcxM3EZznUc/hI4DDkbdzfKF/t8TGzPLLAFTnnFrFZh+RfX0a5vKQCa6bpyNTXol4E0QtsirKa9nImxhjPKTDZzze7HTvvUO/U4nmyZiQAWSTMh+sz1YvaShfAydEQtjJurvFk18dUO6YABHDzse9Hw5zALAXuOYT4pXvXNoHWgABlmbTOyKyig3G/FmK46tbtyhnrdl1Lt8GiilbbWNawQ9mKdGEJ1LQxUdQ6I1spxIE+zPVWZMUbqgrJdPswU2+dlDcZxK3LyY/EjZuXt5yPWre7Huvt2uYX7vW9n7CGY/h5hErxTrfYTPc8vg77MHVTbkUZVde0GyFw==\n",
            "public_key_pem": "-----BEGIN PUBLIC KEY-----\nMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAtskEDi1HnZjCORJsgl+f\nqvTLd6GaXlEBIXSIvRa3JQRlTqZe/V0lnAwmeLq8CQenudw5D8X9kFAAbV6nai7g\nYVWMQRWmX9gogPxhTjXAHKyxjNPaGdJ1eeOYsJXBcZLxdg+7sx4igTabp40KEIEM\nHF0lXFoeFU9rdNlND3pKUPIAdu4bgLmbCg8oHCcUktgsqwNRlQ2N+usMUD3i4K2u\ngCzr0pQJOyx1a1kQkRsoSwqGxZmgNH+snlfSoY8iA3d9m7uytrHSdgovDwoHOR3Z\nzHde1po5lsiqU5+/iyap5mOLu8ktzUSlADOcmdkPDWoNk4VAcMyuxrs3aWABKiap\n5Shf3t3dAj3MTNxGc51HP4SOAw5G3c3yhf7fExszyywBU55xaxWYfkX19GubykAm\num6cjU16JeBNELbIqymvZyJsYYzykw2c83ux0771Dv1OJ5smYkAFkkzIfrM9WL2k\noXwMnRELYybq7xZNfHVDumAARw87HvR8OcwCwF7jmE+KV71zaB1oAAZZm0zsisoo\nNxvxZiuOrW7coZ63ZdS7fBoopW21jWsEPZinRhCdS0MVHUOiNbKcSBPsz1VmTFG6\noKyXT7MFNvnZQ3GcSty8mPxI2bl7ecj1q3ux7r7drmF+71vZ+whmP4eYRK8U632E\nz3PL4O+zB1U25FGVXXtBshcCAwEAAQ==\n-----END PUBLIC KEY-----\n",
            "rsa_bits": 4096
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "google_compute_firewall",
      "name": "allow-http",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "allow": [
              {
                "ports": [
                  "80"
                ],
                "protocol": "tcp"
              }
            ],
            "creation_timestamp": "2022-12-23T00:52:18.003-08:00",
            "deny": [],
            "description": "",
            "destination_ranges": [],
            "direction": "INGRESS",
            "disabled": false,
            "enable_logging": null,
            "id": "projects/terraform-kubespray-demo/global/firewalls/fw-allow-http",
            "log_config": [],
            "name": "fw-allow-http",
            "network": "https://www.googleapis.com/compute/v1/projects/terraform-kubespray-demo/global/networks/default",
            "priority": 1000,
            "project": "terraform-kubespray-demo",
            "self_link": "https://www.googleapis.com/compute/v1/projects/terraform-kubespray-demo/global/firewalls/fw-allow-http",
            "source_ranges": [
              "0.0.0.0/0"
            ],
            "source_service_accounts": null,
            "source_tags": null,
            "target_service_accounts": null,
            "target_tags": null,
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9"
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "google_compute_firewall",
      "name": "allow-https",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "allow": [
              {
                "ports": [
                  "443"
                ],
                "protocol": "tcp"
              }
            ],
            "creation_timestamp": "2022-12-23T00:52:18.735-08:00",
            "deny": [],
            "description": "",
            "destination_ranges": [],
            "direction": "INGRESS",
            "disabled": false,
            "enable_logging": null,
            "id": "projects/terraform-kubespray-demo/global/firewalls/fw-allow-https",
            "log_config": [],
            "name": "fw-allow-https",
            "network": "https://www.googleapis.com/compute/v1/projects/terraform-kubespray-demo/global/networks/default",
            "priority": 1000,
            "project": "terraform-kubespray-demo",
            "self_link": "https://www.googleapis.com/compute/v1/projects/terraform-kubespray-demo/global/firewalls/fw-allow-https",
            "source_ranges": [
              "0.0.0.0/0"
            ],
            "source_service_accounts": null,
            "source_tags": null,
            "target_service_accounts": null,
            "target_tags": null,
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9"
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "google_compute_firewall",
      "name": "allow-kubectl",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "allow": [
              {
                "ports": [
                  "6643"
                ],
                "protocol": "tcp"
              }
            ],
            "creation_timestamp": "2022-12-23T00:52:18.727-08:00",
            "deny": [],
            "description": "",
            "destination_ranges": [],
            "direction": "INGRESS",
            "disabled": false,
            "enable_logging": null,
            "id": "projects/terraform-kubespray-demo/global/firewalls/fw-allow-kubectl",
            "log_config": [],
            "name": "fw-allow-kubectl",
            "network": "https://www.googleapis.com/compute/v1/projects/terraform-kubespray-demo/global/networks/default",
            "priority": 1000,
            "project": "terraform-kubespray-demo",
            "self_link": "https://www.googleapis.com/compute/v1/projects/terraform-kubespray-demo/global/firewalls/fw-allow-kubectl",
            "source_ranges": [
              "0.0.0.0/0"
            ],
            "source_service_accounts": null,
            "source_tags": null,
            "target_service_accounts": null,
            "target_tags": null,
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9"
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "google_compute_firewall",
      "name": "allow-ssh",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "allow": [
              {
                "ports": [
                  "22"
                ],
                "protocol": "tcp"
              }
            ],
            "creation_timestamp": "2022-12-23T00:52:18.592-08:00",
            "deny": [],
            "description": "",
            "destination_ranges": [],
            "direction": "INGRESS",
            "disabled": false,
            "enable_logging": null,
            "id": "projects/terraform-kubespray-demo/global/firewalls/fw-allow-ssh",
            "log_config": [],
            "name": "fw-allow-ssh",
            "network": "https://www.googleapis.com/compute/v1/projects/terraform-kubespray-demo/global/networks/default",
            "priority": 1000,
            "project": "terraform-kubespray-demo",
            "self_link": "https://www.googleapis.com/compute/v1/projects/terraform-kubespray-demo/global/firewalls/fw-allow-ssh",
            "source_ranges": [
              "0.0.0.0/0"
            ],
            "source_service_accounts": null,
            "source_tags": null,
            "target_service_accounts": null,
            "target_tags": null,
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9"
        }
      ]
    }
  ],
  "check_results": null
}
